apiVersion: apps/v1
kind: Deployment
metadata:
  name: kitops-redis
  namespace: kitops
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kitops-redis
  template:
    metadata:
      labels:
        app: kitops-redis
    spec:
      securityContext:
        runAsNonRoot: true
        runAsUser: 999  # Redis user
        runAsGroup: 999
        fsGroup: 999
      containers:
      - name: redis
        image: redis:7-alpine
        ports:
        - containerPort: 6379
        securityContext:
          runAsNonRoot: true
          runAsUser: 999  # Redis user
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: false  # Redis needs write access for data
          capabilities:
            drop:
            - ALL
        command:
        - redis-server
        - --appendonly
        - "yes"
        volumeMounts:
        - name: redis-storage
          mountPath: /data
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "256Mi"
            cpu: "200m"
      volumes:
      - name: redis-storage
        persistentVolumeClaim:
          claimName: redis-pvc

---
apiVersion: v1
kind: Service
metadata:
  name: kitops-redis
  namespace: kitops
spec:
  selector:
    app: kitops-redis
  ports:
  - port: 6379
    targetPort: 6379
  type: ClusterIP

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: redis-pvc
  namespace: kitops
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi