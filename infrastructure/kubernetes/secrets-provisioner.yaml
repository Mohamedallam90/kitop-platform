# Kubernetes Job to create secrets from environment variables
# This should be run during deployment to populate secrets securely
apiVersion: batch/v1
kind: Job
metadata:
  name: secrets-provisioner
  namespace: kitops
spec:
  template:
    spec:
      restartPolicy: OnFailure
      containers:
      - name: secrets-provisioner
        image: bitnami/kubectl:latest
        command:
        - /bin/bash
        - -c
        - |
          # Create or update the secrets from environment variables
          kubectl create secret generic kitops-secrets \
            --from-literal=DB_USERNAME="${DB_USERNAME}" \
            --from-literal=DB_PASSWORD="${DB_PASSWORD}" \
            --from-literal=JWT_SECRET="${JWT_SECRET}" \
            --from-literal=STRIPE_SECRET_KEY="${STRIPE_SECRET_KEY}" \
            --from-literal=OPENAI_API_KEY="${OPENAI_API_KEY}" \
            --namespace=kitops \
            --dry-run=client -o yaml | kubectl apply -f -
        env:
        - name: DB_USERNAME
          valueFrom:
            secretKeyRef:
              name: external-secrets
              key: db-username
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: external-secrets
              key: db-password
        - name: JWT_SECRET
          valueFrom:
            secretKeyRef:
              name: external-secrets
              key: jwt-secret
        - name: STRIPE_SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: external-secrets
              key: stripe-secret-key
        - name: OPENAI_API_KEY
          valueFrom:
            secretKeyRef:
              name: external-secrets
              key: openai-api-key
      serviceAccountName: secrets-provisioner

---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: secrets-provisioner
  namespace: kitops

---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  namespace: kitops
  name: secrets-provisioner
rules:
- apiGroups: [""]
  resources: ["secrets"]
  verbs: ["get", "list", "create", "update", "patch"]

---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: secrets-provisioner
  namespace: kitops
subjects:
- kind: ServiceAccount
  name: secrets-provisioner
  namespace: kitops
roleRef:
  kind: Role
  name: secrets-provisioner
  apiGroup: rbac.authorization.k8s.io